name: 'Diffuse Action for Gradle'
description: "Generates Jake Wharton's Diffuse tool output between head and target branch of a Pull Request"
inputs:
  old-file-path:
    description: 'old file path'
    required: true
  old-mapping-path:
    description: 'old mapping file produced by R8 or ProGuard'
    required: false
  new-file-path:
    description: 'new file path'
    required: true
  new-mapping-path:
    description: 'new mapping file produced by R8 or ProGuard'
    required: false
  lib-version:
    description: 'diffuse tool version'
    required: true
    default: '0.1.0'
  debug:
    description: 'if true, shows additional debug information'
    required: false
    default: false
outputs:
  diff-raw:
    description: "Diffuse full output"
    value: ${{ steps.run-diffuse.outputs.diff-raw }}
  diff-file:
    description: "Diffuse full output as file"
    value: ${{ steps.run-diffuse.outputs.diff-file }}
  diff-gh-comment:
    description: "Diffuse full output as Github comment"
    value: ${{ steps.run-diffuse.outputs.diff-gh-comment }}
  summary:
    description: "Diffuse summary"
    value: ${{ steps.run-diffuse.outputs.summary }}
  apk:
    description: "Diffuse apk info"
    value: ${{ steps.run-diffuse.outputs.apk }}
  dex:
    description: "Diffuse dex info"
    value: ${{ steps.run-diffuse.outputs.dex }}
  arcs:
    description: "Diffuse arcs info"
    value: ${{ steps.run-diffuse.outputs.arcs }}
  jar:
    description: "Diffuse jar info"
    value: ${{ steps.run-diffuse.outputs.jar }}
  classes:
    description: "Diffuse classes info"
    value: ${{ steps.run-diffuse.outputs.classes }}
branding:
  color: 'red'
  icon: 'check-square'
runs:
  using: 'composite'
  steps:
    - id: run-diffuse
      env:
        INPUT_OLD_FILE: ${{ inputs.old-file-path }}
        INPUT_NEW_FILE: ${{ inputs.new-file-path }}
        INPUT_OLD_MAPPING_FILE: ${{ inputs.old-mapping-path }}
        INPUT_NEW_MAPPING_FILE: ${{ inputs.new-mapping-path }}
        INPUT_VERSION: ${{ inputs.lib-version }}
        INPUT_DEBUG: ${{ inputs.debug }}
      run: python3 ${{ github.action_path }}/entrypoint.py
      shell: bash
